SQL CASE STUDY


Question  = Task: Describe the TABLE- orders;
1. TABLE- orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order
2. TABLE- customers:
Customer_ID(VARCHAR) - ID of the customer, primary key of the table
Customer_Name_(VARCHAR) - Name of the Customer
3. TABLE- returns:
Order_ID(VARCHAR) - Primary key of the order returned
Returned(VARCHAR) - If the order was returned or not

Quesry = describe orders;
select * from orders;

Question = Write a query for the same. Result should be such that the highest profit category and its respective sum of profit be on the top of result set.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select category,sum(profit) from 
orders group by category order by
sum(Profit) desc;

Question = Which category had the highest profits?
Answer = Technology

Question = Write the query to update the city as Chandigarh where the State is Chandigarh.
Print all the contents of the table after updating.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = update orders set City = 'Chandigarh' where State = 'Chandigarh';
select * from orders;

Question = Write a query to find the total profit sum from orders table.
Result should be such that only total profit sum is returned.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select sum(Profit) from orders;

Question = Write a query to get the OrderID, ProductName and Profit. Result should be with respect to profit(In increasing order).
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select Order_ID, Product_Name, Profit from orders order by Profit ASC;

Question = Your manager wants to know the Product with highest loss. Write the Product_Name of such product. (Loss is when profit gets negative.)
Answer = Cubify CubeX 3D Printer Double Head Print

Question = Going through the data, you also want to report orders where there was loss.
Write a query to get all the orders where there was a loss and report the order ID, product name and loss. Sort the result in a format that the highest loss is on the top.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select Order_id, Product_Name, Profit from orders where Profit < 0 order by Profit;

Question = Now you know all the orders where there was a loss. You are curious to know why the company made a loss on those items. You see that discounts are also given on some items.
Write a query to get the list of all orders which have loss and sort them in descending order of discount given.
Print OrderID, ProductName, Profit and Discount.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select Order_ID, Product_Name, Profit, Discount from orders where Profit < '0' order by Discount DESC;

Question = Does the order with the highest loss was given the highest discount?
Answer = NO

Question = You now want to know if there are particular states which are making losses. Write a query to get the State and sum of profit for each state. The result should be in increasing order of profit.
Refer Table-orders.
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select state,sum(profit)
from orders group by state
order by sum(profit)

Question = Select the states which are making a loss?
Answer = Delhi , Daman and diu

Question = Write a query to get state, category and sum of profits.
Refer Table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select State, Category, sum(Profit) from orders group by State, Category;

Question = Did you have any observations? Were there any states which are in loss because of category? Choose the correct option for such states and their categories.
Answer = Delhi - Furniture
         Daman & Diu - Furniture 

Question = You realised that there are three segments of products: Consumer, Corporate and Home office. You ask your manager to provide you a list of the people who are managing these segments. Unfortunately these are not present in the database. Since you want to digitise the system, you plan to put the data in the database. He provides you the data on a sheet of paper as follows:
Segment - Varchar(100)
Segment_Manager- Varchar(100)
Write a query to create a table in the database with Name as Manager and with values provided. Do assign proper Primary key.

SEGMENT     | SEGMENT MANAGER |
Consumer    |  Gaganjit singh |
Corporate   | Aman jain       |
Home Ofiice |  Kush Arora     |

Query = create table Manager(Segment varchar(100), Segment_Manager varchar(100));
insert into Manager(Segment, Segment_Manager) values("Consumer", "Gaganjit Singh");
insert into Manager(Segment, Segment_Manager) values("Corporate", "Aman Jain");
insert into Manager(Segment, Segment_Manager) values("Home Office", "Kush Arora");
select * from Manager;


Question =  Write a query to get Segment, count of order, sum of profit.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order


Query = SELECT Segment, COUNT(Order_ID), SUM(Profit) FROM orders GROUP BY Segment;


Question = Which manager reported the highest profit.
Answer = Gaganjit Singh 

Question = Write the query to get sum of sales, sum of profit for the year 2020.
Note: Order_Date has char data type.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select sum(Sales), sum(Profit) from orders where Order_Date like '%20';


Question = Now your manager wants you to remove 2020 from the total sales and profit and present the result. Write a query to get the sum of sales of each segment and their respective segment manager for all years except 2020.
Refer table- orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Refer table- manager
Segment(VARCHAR)- to which segment does the product sold belongs to
Segment_Manager(VARCHAR)- Manager of the respective segment
Expected Output
ALT TEXT

EXPECTED OUTPUT

|SUM (orders.Sales)      |  Segment_manager
|728733.1449999991       |    Gaganjit Singh 
|277010.88029999984      |    Kush Arora             
|408922.81760000007      |    Aman Jain

Query = SELECT SUM(orders.Sales),manager.Segment_Manager
FROM manager 
inner join orders
on orders.Segment=manager.Segment
where orders.Order_Date not like '%20'
group by orders.Segment,manager.Segment_Manager;


Question = Write a query to get Customer ID and sum of profit for each. The result should be such that you are easily able to find the highest profit customer.
Refer table-orders
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order

Query = select Customer_ID, sum(profit) from 
orders group by Customer_ID order by 
sum(Profit) desc;


Question = Write down the customer id of the highest profit customer.
Answer = TC-20980

Question = Write a query to find the customer details having the highest Profit. The result should be such that you are easily able to find the highest profitable customer.
The query should have columns : Customer_ID, Customer_Name_, sum of Sales, sum of Profit, count of Order_ID.
Refer table-orders.
Order_ID(VARCHAR) - Primary Key for each order placed
Order_Date(VARCHAR) - when was the order placed
Ship_Date(VARCHAR) - when was the order shipped
Customer_ID(VARCHAR) -ID of the customer who placed the order
Segment(VARCHAR) - to which segment does the product sold belongs to
State(VARCHAR) - State where the order was placed
City(VARCHAR) - City where the order was placed
Product_ID(VARCHAR) - ID of the product sold
Category(VARCHAR) - Category of the product Sold
SubCategory(VARCHAR) - Sub category of the product Sold
Product_Name(VARCHAR) - Name of the product sold
Sales(DOUBLE) -Sale price of the order
Quantity(DOUBLE) - Quantity of product for which order was placed
Discount(DOUBLE) - % Discount offered on the MRP
Profit(DOUBLE) - Total Profit made on the order



Refer table-customers
Customer_ID (VARCHAR) - ID of the customer, primary key of the table
Customer_Name_ (VARCHAR) - Name of the Customer

Query = Select orders.Customer_ID, customers.Customer_Name_, SUM(orders.Sales), SUM(orders.Profit), count(orders.Order_ID)
from orders inner join customers 
on orders.Customer_ID=customers.Customer_ID
group by customers.Customer_ID, customers.Customer_Name_
order by SUM(orders.Profit) desc;
